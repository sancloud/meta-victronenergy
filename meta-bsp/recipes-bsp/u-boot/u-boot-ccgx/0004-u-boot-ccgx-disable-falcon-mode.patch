From b8e213fbb8ff724ec2cb60d3632ddc99f3ad977b Mon Sep 17 00:00:00 2001
From: Mans Rullgard <mans@mansr.com>
Date: Mon, 20 Jun 2016 15:36:30 +0100
Subject: [PATCH] u-boot-ccgx: disable falcon mode

Falcon mode doesn't support dual kernels as used with swupdate.
Disable it.
---
 board/victron/bpp3/bpp3.c | 104 ----------------------------------------------
 include/configs/bpp3.h    |  12 ------
 2 files changed, 116 deletions(-)

diff --git a/board/victron/bpp3/bpp3.c b/board/victron/bpp3/bpp3.c
index 364dee992abd..9bb3374776f6 100644
--- a/board/victron/bpp3/bpp3.c
+++ b/board/victron/bpp3/bpp3.c
@@ -297,119 +297,15 @@ int board_mmc_init(bd_t *bis)
 #endif
 
 #ifdef CONFIG_SPL_BUILD
-void spl_board_prepare_for_linux(void)
-{
-	enable_lcd(1);
-}
-
 void spl_board_prepare_for_u_boot(void)
 {
 	dcache_disable();
 }
 
-static char *find_variable(char const *str, char const *find_varname)
-{
-	int len = strlen(find_varname);
-	while (*str) {
-		if (strncmp(str, find_varname, len) == 0) {
-			debug("[find_variable] variable: %s\n", str);
-			return strchr(str, '=') + 1;
-		}
-		str += strlen(str) + 1; /* Next variable */
-	}
-	return NULL;
-}
-
-static int upd_mode_set(void)
-{
-	char *value = NULL;
-	unsigned char *env_data = NULL;
-	int crc_ok, crc_redund_ok;
-
-	/* load enviroment variables from nand and search for upd_mode */
-	env_t *ep = (env_t *)0x80300000; /* RAM buffer */
-	nand_spl_load_image(CONFIG_ENV_OFFSET, CONFIG_ENV_SIZE, ep);
-	debug("ep->crc: %08x\n", ep->crc);
-
-	/* RAM buffer */
-	env_t *ep_redund = (env_t *)(0x80300000 + CONFIG_ENV_SIZE);
-	nand_spl_load_image(CONFIG_ENV_OFFSET_REDUND, CONFIG_ENV_SIZE,
-				ep_redund);
-	debug("ep_redund->crc: %08x\n", ep_redund->crc);
-
-	crc_ok = crc32(0, ep->data, ENV_SIZE) == ep->crc;
-	crc_redund_ok = crc32(0, ep_redund->data, ENV_SIZE) == ep_redund->crc;
-
-	if (crc_ok && crc_redund_ok) {
-		if (ep->flags == 0 && ep_redund->flags == 255)
-			env_data = ep->data;
-		else if (ep->flags == 255 && ep_redund->flags == 0)
-			env_data = ep_redund->data;
-		else if (ep->flags > ep_redund->flags)
-			env_data = ep->data;
-		else if (ep->flags < ep_redund->flags)
-			env_data = ep_redund->data;
-	} else if (!crc_ok && crc_redund_ok) {
-		puts("!bad CRC\n");
-		env_data = ep_redund->data;
-	} else if (crc_ok && !crc_redund_ok) {
-		puts("!bad CRC_REDUND\n");
-		env_data = ep->data;
-	} else {
-		puts("!bad CRC and CRC_REDUND\n");
-	}
-
-	debug("ep->data: %08x\n", (unsigned int)ep->data);
-	debug("ep_redund->data: %08x\n", (unsigned int)ep_redund->data);
-	debug("env_data: %08x\n", (unsigned int)env_data);
-
-	if (env_data) {
-		value = find_variable((char *)env_data, "upd_mode");
-		if (value) {
-			debug("[upd_mode_set]value: %s\n", value);
-			if ((strlen(value) > 0) &&
-				 (strcmp(value, "none") != 0)) {
-				debug("[upd_mode_set] Boot u-boot!\n");
-				return 1;
-			}
-		}
-	}
-	return 0;
-}
-
-int spl_start_uboot(void)
-{
-	int val = 0;
-
-	if (!gpio_request(CONFIG_SPL_OS_BOOT_KEY, "U-Boot key")) {
-		gpio_direction_input(CONFIG_SPL_OS_BOOT_KEY);
-		val = !gpio_get_value(CONFIG_SPL_OS_BOOT_KEY);
-		gpio_free(CONFIG_SPL_OS_BOOT_KEY);
-	}
-	val = val || upd_mode_set();
-	return val;
-}
-
 void spl_board_init(void)
 {
 	gpmc_init();
 	nand_init();
-	if (!spl_start_uboot()) {
-		dram_init_banksize();
-
-		/* reserve TLB table (4k) */
-		gd->tlb_addr = 0x8fff0000;
-		debug("TLB table at: %08lx\n", gd->tlb_addr);
-
-		/* add sram (64k actually, but the cp15 counts in MiBs) */
-		gd->bd->bi_dram[1].start = CONFIG_SPL_TEXT_BASE;
-		gd->bd->bi_dram[1].size =  (1 << 20);
-
-		/* Enable caches */
-		enable_caches();
-	}
-
-
 
 #  ifdef CONFIG_VIDEO
 	board_video_init();
diff --git a/include/configs/bpp3.h b/include/configs/bpp3.h
index f1a15470abb3..38d17c860f41 100644
--- a/include/configs/bpp3.h
+++ b/include/configs/bpp3.h
@@ -121,16 +121,6 @@
 	"mtdparts=" MTDPARTS_DEFAULT "\0" \
 	"nandboot=nand read ${loadaddr} ${kernel} && bootm ${loadaddr}\0"
 
-/* SPL OS boot options */
-#define CONFIG_CMD_SPL
-#define CONFIG_CMD_SPL_WRITE_SIZE	0x400 /* 1024 byte */
-#define CONFIG_SYS_NAND_SPL_KERNEL_OFFS	0x00400000
-#define CONFIG_CMD_SPL_NAND_OFS		0x00300000
-
-#define CONFIG_SPL_OS_BOOT
-#define CONFIG_SPL_OS_BOOT_KEY	29 /* left button */
-
-#define CONFIG_SYS_SPL_ARGS_ADDR	(PHYS_SDRAM_1 + 0x100)
 #define CONFIG_SPL_BOARD_INIT
 #ifdef CONFIG_VIDEO
 # define CONFIG_SPL_VIDEO_SUPPORT
@@ -147,7 +137,5 @@
 #define CONFIG_SYS_MMCSD_RAW_MODE_KERNEL_SECTOR	0x500 /* address 0xa0000 */
 
 #define CONFIG_SPL_FAT_LOAD_PAYLOAD_NAME	"u-boot.img"
-#define CONFIG_SPL_FAT_LOAD_ARGS_NAME		"args"
-#define CONFIG_SPL_FAT_LOAD_KERNEL_NAME		"uImage"
 
 #endif /* __CONFIG_H */
-- 
2.9.0

